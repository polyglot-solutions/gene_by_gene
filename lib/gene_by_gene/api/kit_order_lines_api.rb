=begin
#Nucleus API v2.0

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2.0

Generated by: https://openapi-generator.tech
Generator version: 7.11.0

=end

require 'cgi'

module GeneByGene
  class KitOrderLinesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Cancel a specific kit order line
    # @param [Hash] opts the optional parameters
    # @option opts [CancelKitOrderLine] :cancel_kit_order_line 
    # @return [nil]
    def api_v2_kitorderlines_delete(opts = {})
      api_v2_kitorderlines_delete_with_http_info(opts)
      nil
    end

    # Cancel a specific kit order line
    # @param [Hash] opts the optional parameters
    # @option opts [CancelKitOrderLine] :cancel_kit_order_line 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def api_v2_kitorderlines_delete_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: KitOrderLinesApi.api_v2_kitorderlines_delete ...'
      end
      # resource path
      local_var_path = '/api/v2/kitorderlines'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'cancel_kit_order_line'])

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['oauth2']

      new_options = opts.merge(
        :operation => :"KitOrderLinesApi.api_v2_kitorderlines_delete",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: KitOrderLinesApi#api_v2_kitorderlines_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # @param [Hash] opts the optional parameters
    # @option opts [String] :kit_numbers 
    # @option opts [String] :order_id 
    # @option opts [String] :order_line_id 
    # @option opts [String] :status 
    # @option opts [String] :attribute_term 
    # @option opts [String] :attributes_to_search 
    # @option opts [String] :attributes_filter 
    # @option opts [Integer] :offset 
    # @option opts [Integer] :page_size 
    # @option opts [String] :order_by 
    # @option opts [String] :product_type 
    # @option opts [Boolean] :order_by_asc 
    # @return [nil]
    def api_v2_kitorderlines_download_get(opts = {})
      api_v2_kitorderlines_download_get_with_http_info(opts)
      nil
    end

    # @param [Hash] opts the optional parameters
    # @option opts [String] :kit_numbers 
    # @option opts [String] :order_id 
    # @option opts [String] :order_line_id 
    # @option opts [String] :status 
    # @option opts [String] :attribute_term 
    # @option opts [String] :attributes_to_search 
    # @option opts [String] :attributes_filter 
    # @option opts [Integer] :offset 
    # @option opts [Integer] :page_size 
    # @option opts [String] :order_by 
    # @option opts [String] :product_type 
    # @option opts [Boolean] :order_by_asc 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def api_v2_kitorderlines_download_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: KitOrderLinesApi.api_v2_kitorderlines_download_get ...'
      end
      # resource path
      local_var_path = '/api/v2/kitorderlines/download'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'kitNumbers'] = opts[:'kit_numbers'] if !opts[:'kit_numbers'].nil?
      query_params[:'orderId'] = opts[:'order_id'] if !opts[:'order_id'].nil?
      query_params[:'orderLineId'] = opts[:'order_line_id'] if !opts[:'order_line_id'].nil?
      query_params[:'status'] = opts[:'status'] if !opts[:'status'].nil?
      query_params[:'attributeTerm'] = opts[:'attribute_term'] if !opts[:'attribute_term'].nil?
      query_params[:'attributesToSearch'] = opts[:'attributes_to_search'] if !opts[:'attributes_to_search'].nil?
      query_params[:'attributesFilter'] = opts[:'attributes_filter'] if !opts[:'attributes_filter'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'orderBy'] = opts[:'order_by'] if !opts[:'order_by'].nil?
      query_params[:'productType'] = opts[:'product_type'] if !opts[:'product_type'].nil?
      query_params[:'orderByAsc'] = opts[:'order_by_asc'] if !opts[:'order_by_asc'].nil?

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['oauth2']

      new_options = opts.merge(
        :operation => :"KitOrderLinesApi.api_v2_kitorderlines_download_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: KitOrderLinesApi#api_v2_kitorderlines_download_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get the combinations of kit and associated orderline
    # @param [Hash] opts the optional parameters
    # @option opts [String] :kit_numbers 
    # @option opts [String] :order_id 
    # @option opts [String] :order_line_id 
    # @option opts [String] :status 
    # @option opts [String] :attribute_term 
    # @option opts [String] :attributes_to_search 
    # @option opts [String] :attributes_filter 
    # @option opts [Integer] :offset 
    # @option opts [Integer] :page_size 
    # @option opts [String] :order_by 
    # @option opts [String] :product_type 
    # @option opts [Boolean] :order_by_asc 
    # @return [GetKitOrderLinesKitOrderLineDtoPaginatedList]
    def api_v2_kitorderlines_get(opts = {})
      data, _status_code, _headers = api_v2_kitorderlines_get_with_http_info(opts)
      data
    end

    # Get the combinations of kit and associated orderline
    # @param [Hash] opts the optional parameters
    # @option opts [String] :kit_numbers 
    # @option opts [String] :order_id 
    # @option opts [String] :order_line_id 
    # @option opts [String] :status 
    # @option opts [String] :attribute_term 
    # @option opts [String] :attributes_to_search 
    # @option opts [String] :attributes_filter 
    # @option opts [Integer] :offset 
    # @option opts [Integer] :page_size 
    # @option opts [String] :order_by 
    # @option opts [String] :product_type 
    # @option opts [Boolean] :order_by_asc 
    # @return [Array<(GetKitOrderLinesKitOrderLineDtoPaginatedList, Integer, Hash)>] GetKitOrderLinesKitOrderLineDtoPaginatedList data, response status code and response headers
    def api_v2_kitorderlines_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: KitOrderLinesApi.api_v2_kitorderlines_get ...'
      end
      # resource path
      local_var_path = '/api/v2/kitorderlines'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'kitNumbers'] = opts[:'kit_numbers'] if !opts[:'kit_numbers'].nil?
      query_params[:'orderId'] = opts[:'order_id'] if !opts[:'order_id'].nil?
      query_params[:'orderLineId'] = opts[:'order_line_id'] if !opts[:'order_line_id'].nil?
      query_params[:'status'] = opts[:'status'] if !opts[:'status'].nil?
      query_params[:'attributeTerm'] = opts[:'attribute_term'] if !opts[:'attribute_term'].nil?
      query_params[:'attributesToSearch'] = opts[:'attributes_to_search'] if !opts[:'attributes_to_search'].nil?
      query_params[:'attributesFilter'] = opts[:'attributes_filter'] if !opts[:'attributes_filter'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'orderBy'] = opts[:'order_by'] if !opts[:'order_by'].nil?
      query_params[:'productType'] = opts[:'product_type'] if !opts[:'product_type'].nil?
      query_params[:'orderByAsc'] = opts[:'order_by_asc'] if !opts[:'order_by_asc'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'GetKitOrderLinesKitOrderLineDtoPaginatedList'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['oauth2']

      new_options = opts.merge(
        :operation => :"KitOrderLinesApi.api_v2_kitorderlines_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: KitOrderLinesApi#api_v2_kitorderlines_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # @param [Hash] opts the optional parameters
    # @option opts [String] :kit_numbers 
    # @option opts [String] :order_id 
    # @option opts [String] :order_line_id 
    # @option opts [String] :status 
    # @option opts [String] :attribute_term 
    # @option opts [String] :attributes_to_search 
    # @option opts [String] :attributes_filter 
    # @option opts [Integer] :offset 
    # @option opts [Integer] :page_size 
    # @option opts [String] :order_by 
    # @option opts [String] :product_type 
    # @option opts [Boolean] :order_by_asc 
    # @return [nil]
    def api_v2_kitorderlines_kits_get(opts = {})
      api_v2_kitorderlines_kits_get_with_http_info(opts)
      nil
    end

    # @param [Hash] opts the optional parameters
    # @option opts [String] :kit_numbers 
    # @option opts [String] :order_id 
    # @option opts [String] :order_line_id 
    # @option opts [String] :status 
    # @option opts [String] :attribute_term 
    # @option opts [String] :attributes_to_search 
    # @option opts [String] :attributes_filter 
    # @option opts [Integer] :offset 
    # @option opts [Integer] :page_size 
    # @option opts [String] :order_by 
    # @option opts [String] :product_type 
    # @option opts [Boolean] :order_by_asc 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def api_v2_kitorderlines_kits_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: KitOrderLinesApi.api_v2_kitorderlines_kits_get ...'
      end
      # resource path
      local_var_path = '/api/v2/kitorderlines/kits'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'kitNumbers'] = opts[:'kit_numbers'] if !opts[:'kit_numbers'].nil?
      query_params[:'orderId'] = opts[:'order_id'] if !opts[:'order_id'].nil?
      query_params[:'orderLineId'] = opts[:'order_line_id'] if !opts[:'order_line_id'].nil?
      query_params[:'status'] = opts[:'status'] if !opts[:'status'].nil?
      query_params[:'attributeTerm'] = opts[:'attribute_term'] if !opts[:'attribute_term'].nil?
      query_params[:'attributesToSearch'] = opts[:'attributes_to_search'] if !opts[:'attributes_to_search'].nil?
      query_params[:'attributesFilter'] = opts[:'attributes_filter'] if !opts[:'attributes_filter'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'pageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'orderBy'] = opts[:'order_by'] if !opts[:'order_by'].nil?
      query_params[:'productType'] = opts[:'product_type'] if !opts[:'product_type'].nil?
      query_params[:'orderByAsc'] = opts[:'order_by_asc'] if !opts[:'order_by_asc'].nil?

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['oauth2']

      new_options = opts.merge(
        :operation => :"KitOrderLinesApi.api_v2_kitorderlines_kits_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: KitOrderLinesApi#api_v2_kitorderlines_kits_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
