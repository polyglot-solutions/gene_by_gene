{
  "openapi": "3.0.1",
  "info": {
    "title": "Nucleus API v2.0",
    "version": "2.0"
  },
  "paths": {
    "/api/v2/attributes": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "summary": "Get attribute definitions",
        "parameters": [
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of attribute definitions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/.AttributeDefinitionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/attributes/{entityType}": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "summary": "Get attribute definitions",
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of attribute definitions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/.AttributeDefinitionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/attributes/groups": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "summary": "Get list of attribute group definitions",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/GetAttributeGroupDefinitions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of attributes in some group",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeGroupDefinitionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/attributes/groups/{name}": {
      "get": {
        "tags": [
          "Attributes"
        ],
        "summary": "Get attribute group definition",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of attributes in some group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeGroupDefinitionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/ehr/order": {
      "post": {
        "tags": [
          "Ehr"
        ],
        "summary": "Create order HL7 (JSON)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/.CreateOrderFromHl7.Command"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.CreateOrderFromHl7.Command"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/.CreateOrderFromHl7.Command"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/.CreateOrderFromHl7.Command"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ORR_O02"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/ehr/results": {
      "get": {
        "tags": [
          "Ehr"
        ],
        "summary": "Get results by PlacerOrderNumber or FillerOrderNumber",
        "parameters": [
          {
            "name": "sendingFacility",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "placerOrderNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fillerOrderNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "kit results in ORU_R01 format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ORU_R01"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/eventTypes": {
      "get": {
        "tags": [
          "EventTypes"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/fulfillments": {
      "get": {
        "tags": [
          "Fulfillments"
        ],
        "summary": "Get fulfillments",
        "parameters": [
          {
            "name": "orderLineId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fulfillmentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of fulfillments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.GetFulfillments.FulfillmentDtoPaginatedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/fulfillments/actions/updateShipmentAddress": {
      "post": {
        "tags": [
          "Fulfillments"
        ],
        "summary": "Edit Address for Shipment",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditAddressCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAddressCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAddressCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditAddressCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditAddressCommand"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/fulfillments/{id}": {
      "delete": {
        "tags": [
          "Fulfillments"
        ],
        "summary": "Cancel fulfillment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Fulfillment has been successfully canceled."
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/fulfillments/actions/getShippingOptions": {
      "post": {
        "tags": [
          "Fulfillments"
        ],
        "summary": "Get Shipping Options",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/.GetAvailableShippingOptions.Query"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.GetAvailableShippingOptions.Query"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/.GetAvailableShippingOptions.Query"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/.GetAvailableShippingOptions.Query"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Shipping Options",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.GetAvailableShippingOptions.ShippingOptionsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/kitorderlines": {
      "get": {
        "tags": [
          "KitOrderLines"
        ],
        "summary": "Get the combinations of kit and associated orderline",
        "parameters": [
          {
            "name": "kitNumbers",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderLineId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributesToSearch",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributesFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderByAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of kit-orderlines",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.GetKitOrderLines.KitOrderLineDtoPaginatedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      },
      "delete": {
        "tags": [
          "KitOrderLines"
        ],
        "summary": "Cancel a specific kit order line",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelKitOrderLine"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelKitOrderLine"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelKitOrderLine"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelKitOrderLine"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates the request has been enacted"
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/kitorderlines/kits": {
      "get": {
        "tags": [
          "KitOrderLines"
        ],
        "parameters": [
          {
            "name": "kitNumbers",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderLineId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributesToSearch",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributesFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderByAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/kitorderlines/download": {
      "get": {
        "tags": [
          "KitOrderLines"
        ],
        "parameters": [
          {
            "name": "kitNumbers",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderLineId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributesToSearch",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributesFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderByAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/kits": {
      "get": {
        "tags": [
          "Kits"
        ],
        "summary": "Get kits",
        "description": "OrderNumber = Parent OrderId\r\nStatus = Error, Canceled, Not Received, Received, In Lab, Completed",
        "parameters": [
          {
            "name": "kitNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of kits",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.GetKits.KitsOrdersDtoPaginatedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/kits/{kitNumber}": {
      "get": {
        "tags": [
          "Kits"
        ],
        "summary": "Get kit by kit number",
        "parameters": [
          {
            "name": "kitNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The specified kit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.KitDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      },
      "delete": {
        "tags": [
          "Kits"
        ],
        "summary": "Cancel the kit including the order line items.",
        "parameters": [
          {
            "name": "kitNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "All kit's order lines have been canceled"
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/kits/{kitNumber}/orderLines": {
      "delete": {
        "tags": [
          "Kits"
        ],
        "summary": "Cancel the kit including the order line items.",
        "parameters": [
          {
            "name": "kitNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "All kit's order lines have been canceled"
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/kits/{kitNumber}/gender/{gender}": {
      "patch": {
        "tags": [
          "Kits"
        ],
        "summary": "Set kit gender",
        "parameters": [
          {
            "name": "kitNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gender",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The modified kit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.KitSummaryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/kits/{kitNumber}/orders": {
      "get": {
        "tags": [
          "Kits"
        ],
        "summary": "Get orders associated with a specific kit",
        "parameters": [
          {
            "name": "kitNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.KitsOrdersDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/kits/{kitNumber}/results": {
      "get": {
        "tags": [
          "Kits"
        ],
        "summary": "Get kit order line results associated with a specific kit",
        "parameters": [
          {
            "name": "kitNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of kit order line results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.KitResultsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/kits/{kitNumber}/attributes": {
      "patch": {
        "tags": [
          "Kits"
        ],
        "summary": "Set kit attributes",
        "parameters": [
          {
            "name": "kitNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The kitnumber and attributes name,value pairs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetKitAttributeValues"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetKitAttributeValues"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetKitAttributeValues"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetKitAttributeValues"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The modified kit",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/.KitAttributeValueDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      },
      "delete": {
        "tags": [
          "Kits"
        ],
        "summary": "Delete kit attributes",
        "parameters": [
          {
            "name": "kitNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "All kit's attributes have been deleted"
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/kits/{kitNumber}/attributes/{name}={value}": {
      "patch": {
        "tags": [
          "Kits"
        ],
        "summary": "Set kit attribute",
        "parameters": [
          {
            "name": "kitNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The modified kit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.KitAttributeValueDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/kits/{kitNumber}/attribute/{attributeName}": {
      "delete": {
        "tags": [
          "Kits"
        ],
        "summary": "Delete kit single attribute",
        "parameters": [
          {
            "name": "attributeName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kitNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Kit attribute has been deleted"
          },
          "400": {
            "description": "Bad Request - Invalid parameters."
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/kits/actions/uploadKitAttributesCSV": {
      "post": {
        "tags": [
          "Kits"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/kits/actions/{kitNumber}/uploadDocuments/{documentType}": {
      "post": {
        "tags": [
          "Kits"
        ],
        "summary": "Upload Kits Documents",
        "description": "Image or Text File only",
        "parameters": [
          {
            "name": "kitNumber",
            "in": "path",
            "description": "Kit Number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentType",
            "in": "path",
            "description": "ClinicIntake, DriversLicense, Insurance, KitDocument, KitRequisitionForm, MedicalNecessity, ReleaseForm",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          },
          "200": {
            "description": "Upload completed"
          }
        }
      }
    },
    "/api/v2/notificationSubscriptions": {
      "get": {
        "tags": [
          "NotificationSubscriptions"
        ],
        "summary": "Get notification subscriptions",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - A list of subscriptions is returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/.NotificationSubscriptionDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      },
      "post": {
        "tags": [
          "NotificationSubscriptions"
        ],
        "summary": "Subscribe to events",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationSubscriptionCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationSubscriptionCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationSubscriptionCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationSubscriptionCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - New subscription is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.NotificationSubscriptionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/notificationSubscriptions/{id}": {
      "get": {
        "tags": [
          "NotificationSubscriptions"
        ],
        "summary": "Get notification subscription by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - Subscription is returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.NotificationSubscriptionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      },
      "patch": {
        "tags": [
          "NotificationSubscriptions"
        ],
        "summary": "Update notification subscription",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/.UpdateNotificationSubscription.Command"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.UpdateNotificationSubscription.Command"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/.UpdateNotificationSubscription.Command"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/.UpdateNotificationSubscription.Command"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - Subscription is updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.NotificationSubscriptionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      },
      "delete": {
        "tags": [
          "NotificationSubscriptions"
        ],
        "summary": "Unsubscribe from events",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success - Subscription is removed"
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/notificationSubscriptions/{id}/actions/resetSecret": {
      "post": {
        "tags": [
          "NotificationSubscriptions"
        ],
        "summary": "Reset webhook secret",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.NotificationSubscriptionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request or parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          },
          "204": {
            "description": "Success - Subscription is updated"
          }
        }
      }
    },
    "/api/v2/notificationSubscriptions/user/{id}/tenant/{tenantId}": {
      "get": {
        "tags": [
          "NotificationSubscriptions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/orderLines/{id}": {
      "get": {
        "tags": [
          "OrderLines"
        ],
        "summary": "Get order line by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order line details",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderLineItemByGuidResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderLineItemByGuidResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrderLineItemByGuidResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      },
      "delete": {
        "tags": [
          "OrderLines"
        ],
        "summary": "Cancels order line",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Order line canceled"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/.GetOrderLineKitsByLineGuid.Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.GetOrderLineKitsByLineGuid.Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/.GetOrderLineKitsByLineGuid.Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/orderLines/{id}/kits": {
      "get": {
        "tags": [
          "OrderLines"
        ],
        "summary": "Get order line kits by line ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order line kits",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/.GetOrderLineKitsByLineGuid.Result"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.GetOrderLineKitsByLineGuid.Result"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/.GetOrderLineKitsByLineGuid.Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get orders",
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderDateMin",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "orderDateMax",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "productName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.GetOrders.OrderDtoPaginatedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create order",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.OrderDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get order by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.OrderDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/orders/actions/createOrderForExistingKits": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create order for the given existing kit numbers",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderForExistingKits"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderForExistingKits"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderForExistingKits"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderForExistingKits"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.OrderDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get products",
        "parameters": [
          {
            "name": "productCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/.ProductDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The current user is not authorized to view this resource."
          },
          "500": {
            "description": "Internal Server Error - An internal server error occurred."
          }
        }
      }
    },
    "/api/v2/results": {
      "get": {
        "tags": [
          "Results"
        ],
        "parameters": [
          {
            "name": "kitNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.IPaginatedList`1[[Nucleus.Domain.Features.Results.ResultKitStatusDto, Nucleus.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Results"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/.AddKitResult.Command"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.AddKitResult.Command"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/.AddKitResult.Command"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/.AddKitResult.Command"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/results/search": {
      "get": {
        "tags": [
          "Results"
        ],
        "parameters": [
          {
            "name": "kitList",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "kitNumbers",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateOfBirth",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "collectionDateRangeStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "collectionDateRangeEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "resultDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "resultTypeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderByAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "resultDateYear",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "resultDateDayOfYear",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/results/csvDownloads": {
      "get": {
        "tags": [
          "Results"
        ],
        "parameters": [
          {
            "name": "kitNumbers",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateOfBirth",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "collectionDateRangeStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "collectionDateRangeEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "resultDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "resultTypeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderByAsc",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "resultDateYear",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "resultDateDayOfYear",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/results/results/{resultId}/url": {
      "get": {
        "tags": [
          "Results"
        ],
        "parameters": [
          {
            "name": "resultId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v2/results/results/presignedUrl": {
      "get": {
        "tags": [
          "Results"
        ],
        "summary": "Get PresignedUrl for a Kit Result",
        "description": "Returns a URL with the Kit Result.\r\nAccepts a Result ID or a Kit Number and Result Type.",
        "parameters": [
          {
            "name": "resultId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "kitNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resultType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.IPaginatedList`1[[Nucleus.Domain.Features.Results.ResultKitStatusDto, Nucleus.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      ".AL1": {
        "type": "object",
        "additionalProperties": false
      },
      ".AddKitResult.Command": {
        "type": "object",
        "properties": {
          "kitNumber": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "orderLineId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.AddKitResult.CommandKitResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".AddKitResult.CommandKitResult": {
        "type": "object",
        "properties": {
          "resultType": {
            "type": "string",
            "nullable": true
          },
          "resultPayload": {
            "type": "string",
            "nullable": true
          },
          "resultDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".AddressDto": {
        "type": "object",
        "properties": {
          "isCommercial": {
            "type": "boolean"
          },
          "recipientName": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "addressLine3": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateOrRegion": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "shippingInstruction": {
            "type": "string",
            "nullable": true
          },
          "referenceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".AttributeDefinitionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "alternateName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeTypeDescription": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "allowsMultipleValues": {
            "type": "boolean"
          },
          "sendToPipeLine": {
            "type": "boolean",
            "nullable": true
          },
          "entityTypeId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      ".AttributeGroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sequenceNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isRequired": {
            "type": "boolean"
          },
          "section": {
            "type": "string",
            "nullable": true
          },
          "sectionOrder": {
            "type": "integer",
            "format": "int32"
          },
          "attributeDefinition": {
            "$ref": "#/components/schemas/.AttributeDefinitionDto"
          }
        },
        "additionalProperties": false
      },
      ".BLG": {
        "type": "object",
        "additionalProperties": false
      },
      ".CE": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "nameOfCodingSystem": {
            "type": "string",
            "nullable": true
          },
          "alternateIdentifier": {
            "type": "string",
            "nullable": true
          },
          "alternateText": {
            "type": "string",
            "nullable": true
          },
          "alternateNameOfCodingSystem": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".CQ": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "units": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".CTI": {
        "type": "object",
        "additionalProperties": false
      },
      ".CX": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "checkDigit": {
            "type": "string",
            "nullable": true
          },
          "codeIdentifyingCheckDigitSchemeEmployed": {
            "type": "string",
            "nullable": true
          },
          "assigningAuthority": {
            "type": "string",
            "nullable": true
          },
          "identifierTypeCode": {
            "type": "string",
            "nullable": true
          },
          "assigningFacility": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".CourierDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".CourierServiceDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "courier": {
            "$ref": "#/components/schemas/.CourierDto"
          }
        },
        "additionalProperties": false
      },
      ".CreateOrderFromHl7.Command": {
        "type": "object",
        "properties": {
          "messageHeader": {
            "$ref": "#/components/schemas/.MSH"
          },
          "notesAndComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.NTE"
            },
            "nullable": true
          },
          "patient": {
            "$ref": "#/components/schemas/.ORM_O01_PATIENT"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.ORM_O01_ORDER"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".DG1": {
        "type": "object",
        "properties": {
          "setId": {
            "type": "integer",
            "format": "int32"
          },
          "diagnosisCodingMethod": {
            "type": "string",
            "nullable": true
          },
          "diagnosisCode": {
            "$ref": "#/components/schemas/.CE"
          },
          "diagnosisDescription": {
            "type": "string",
            "nullable": true
          },
          "diagnosisDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "diagnosisType": {
            "type": "string",
            "nullable": true
          },
          "majorDiagnosticCategory": {
            "$ref": "#/components/schemas/.CE"
          },
          "diagnosticRelatedGroup": {
            "$ref": "#/components/schemas/.CE"
          },
          "drgApprovalIndicator": {
            "type": "string",
            "nullable": true
          },
          "drgGrouperReviewCode": {
            "type": "string",
            "nullable": true
          },
          "outlierType": {
            "$ref": "#/components/schemas/.CE"
          },
          "outlierDays": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "outlierCost": {
            "type": "string",
            "nullable": true
          },
          "grouperVersionAndType": {
            "type": "string",
            "nullable": true
          },
          "diagnosisPriority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "diagnosingClinicians": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XCN"
            },
            "nullable": true
          },
          "diagnosisClassification": {
            "type": "string",
            "nullable": true
          },
          "confidentialIndicator": {
            "type": "string",
            "nullable": true
          },
          "attestationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".ERR": {
        "type": "object",
        "properties": {
          "errorCodesAndLocations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".ErrorDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "payload": {
            "nullable": true
          },
          "errorType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".FulfillmentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "orderLineId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "currentStatus": {
            "type": "string",
            "nullable": true
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.ShipmentDto"
            },
            "nullable": true
          },
          "kitCount": {
            "type": "integer",
            "format": "int32"
          },
          "isInternational": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      ".GT1": {
        "type": "object",
        "properties": {
          "setId": {
            "type": "integer",
            "format": "int32"
          },
          "guarantorNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "guarantorNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XPN"
            },
            "nullable": true
          },
          "guarantorSpouseNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XPN"
            },
            "nullable": true
          },
          "guarantorAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XAD"
            },
            "nullable": true
          },
          "guarantorHomePhoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XTN"
            },
            "nullable": true
          },
          "guarantorBusinessPhoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XTN"
            },
            "nullable": true
          },
          "guarantorDateTimeOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "guarantorSex": {
            "type": "string",
            "nullable": true
          },
          "guarantorType": {
            "type": "string",
            "nullable": true
          },
          "guarantorRelationship": {
            "type": "string",
            "nullable": true
          },
          "guarantorSsn": {
            "type": "string",
            "nullable": true
          },
          "guarantorDateBegin": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "guarantorDateEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "guarantorPriority": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "guarantorEmployerNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XPN"
            },
            "nullable": true
          },
          "guarantorEmployerAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XAD"
            },
            "nullable": true
          },
          "guarantorEmployerPhoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XTN"
            },
            "nullable": true
          },
          "guarantorEmployeeIdNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "guarantorEmploymentStatus": {
            "type": "string",
            "nullable": true
          },
          "guarantorOrganizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XON"
            },
            "nullable": true
          },
          "guarantorBillingHoldFlag": {
            "type": "string",
            "nullable": true
          },
          "guarantorCreditRatingCode": {
            "$ref": "#/components/schemas/.CE"
          },
          "guarantorDeathDateAndTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "guarantorDeathFlag": {
            "type": "boolean",
            "nullable": true
          },
          "guarantorChargeAdjustmentCode": {
            "$ref": "#/components/schemas/.CE"
          },
          "guarantorHouseholdAnnualIncome": {
            "type": "string",
            "nullable": true
          },
          "guarantorHouseholdSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "getGuarantorEmployerIdNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "guarantorMaritalStatusCode": {
            "type": "string",
            "nullable": true
          },
          "guarantorHireEffectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employmentStopDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "livingDependency": {
            "type": "string",
            "nullable": true
          },
          "ambulatoryStatus": {
            "type": "string",
            "nullable": true
          },
          "citizenship": {
            "type": "string",
            "nullable": true
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/.CE"
          },
          "livingArrangement": {
            "type": "string",
            "nullable": true
          },
          "publicityIndicator": {
            "$ref": "#/components/schemas/.CE"
          },
          "protectionIndicator": {
            "type": "string",
            "nullable": true
          },
          "studentIndicator": {
            "type": "string",
            "nullable": true
          },
          "religion": {
            "type": "string",
            "nullable": true
          },
          "mothersMaidenName": {
            "$ref": "#/components/schemas/.XPN"
          },
          "nationalityCode": {
            "$ref": "#/components/schemas/.CE"
          },
          "ethnicGroup": {
            "type": "string",
            "nullable": true
          },
          "contactPersonsNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XPN"
            },
            "nullable": true
          },
          "contactPersonsTelephoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XTN"
            },
            "nullable": true
          },
          "contactReason": {
            "$ref": "#/components/schemas/.CE"
          },
          "contactRelationshipCode": {
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "jobCodeClass": {
            "type": "string",
            "nullable": true
          },
          "guarantorEmployersOrganizationName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XON"
            },
            "nullable": true
          },
          "handicap": {
            "type": "string",
            "nullable": true
          },
          "jobStatus": {
            "type": "string",
            "nullable": true
          },
          "guarantorFinancialClass": {
            "type": "string",
            "nullable": true
          },
          "guarantorRace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".GetAvailableShippingOptions.Query": {
        "type": "object",
        "properties": {
          "shippingAddress": {
            "$ref": "#/components/schemas/.AddressDto"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      ".GetAvailableShippingOptions.ShippingOptionDto": {
        "type": "object",
        "properties": {
          "courierName": {
            "type": "string",
            "nullable": true
          },
          "courierServiceCode": {
            "type": "string",
            "nullable": true
          },
          "courierServiceDisplayName": {
            "type": "string",
            "nullable": true
          },
          "estimatedShipDate": {
            "type": "string",
            "format": "date-time"
          },
          "estimatedPrice": {
            "type": "number",
            "format": "double"
          },
          "estimatedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".GetAvailableShippingOptions.ShippingOptionsResponseDto": {
        "type": "object",
        "properties": {
          "dutiesAndTaxesIncluded": {
            "type": "boolean"
          },
          "errorMessages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "shippingOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.GetAvailableShippingOptions.ShippingOptionDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".GetFulfillments.FulfillmentDtoPaginatedList": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.FulfillmentDto"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      ".GetKitOrderLines.KitOrderLineDtoPaginatedList": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.KitOrderLineDto"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      ".GetKits.KitsOrdersDtoPaginatedList": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.KitsOrdersDto"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      ".GetOrderLineItemByGuid.SiblingOrderLine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".GetOrderLineKitsByLineGuid.OrderLineKit": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "receivedByLab": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".GetOrderLineKitsByLineGuid.Result": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.GetOrderLineKitsByLineGuid.OrderLineKit"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      ".GetOrders.OrderDtoPaginatedList": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.OrderDto"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      ".IN1": {
        "type": "object",
        "properties": {
          "setId": {
            "type": "integer",
            "format": "int32"
          },
          "insurancePlanId": {
            "$ref": "#/components/schemas/.CE"
          },
          "insuranceCompanyIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "insuranceCompanyNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XON"
            },
            "nullable": true
          },
          "insuranceCompanyAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XAD"
            },
            "nullable": true
          },
          "insuranceCompanyContactPersons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XPN"
            },
            "nullable": true
          },
          "insuranceCompanyPhoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XTN"
            },
            "nullable": true
          },
          "groupNumber": {
            "type": "string",
            "nullable": true
          },
          "groupNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XON"
            },
            "nullable": true
          },
          "insuredsGroupEmployerId": {
            "type": "string",
            "nullable": true
          },
          "insuredsGroupEmployerNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XON"
            },
            "nullable": true
          },
          "planEffectiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "planExpirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "authorizationInformation": {
            "type": "string",
            "nullable": true
          },
          "planType": {
            "type": "string",
            "nullable": true
          },
          "namesOfInsured": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XPN"
            },
            "nullable": true
          },
          "insuredsRelationshipToPatient": {
            "type": "string",
            "nullable": true
          },
          "insuredsDateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "insuredsAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XAD"
            },
            "nullable": true
          },
          "assignmentOfBenefits": {
            "type": "string",
            "nullable": true
          },
          "coordinationOfBenefits": {
            "type": "string",
            "nullable": true
          },
          "coordinationOfBenefitsPriority": {
            "type": "string",
            "nullable": true
          },
          "noticeOfAdmissionCode": {
            "type": "string",
            "nullable": true
          },
          "noticeOfAdmissionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reportOfEigibilityCode": {
            "type": "string",
            "nullable": true
          },
          "reportOfEigibilityDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "releaseInformationCode": {
            "type": "string",
            "nullable": true
          },
          "preAdmitCert": {
            "type": "string",
            "nullable": true
          },
          "verificationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "verificationBy": {
            "$ref": "#/components/schemas/.XPN"
          },
          "typeOfAgreementCode": {
            "type": "string",
            "nullable": true
          },
          "billingStatus": {
            "type": "string",
            "nullable": true
          },
          "lifetimeReserveDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "delayBeforeLifetimeReserveDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyPlanCode": {
            "type": "string",
            "nullable": true
          },
          "policyNumber": {
            "type": "string",
            "nullable": true
          },
          "policyDeductible": {
            "type": "string",
            "nullable": true
          },
          "policyLimitAmount": {
            "type": "string",
            "nullable": true
          },
          "policyLimitDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "roomRateSemiPrivate": {
            "type": "string",
            "nullable": true
          },
          "roomRatePrivate": {
            "type": "string",
            "nullable": true
          },
          "insuredSEmploymentStatus": {
            "$ref": "#/components/schemas/.CE"
          },
          "insuredsSex": {
            "type": "string",
            "nullable": true
          },
          "insuredsEmployerAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XAD"
            },
            "nullable": true
          },
          "verificationStatus": {
            "type": "string",
            "nullable": true
          },
          "priorInsurancePlanId": {
            "type": "string",
            "nullable": true
          },
          "coverageType": {
            "type": "string",
            "nullable": true
          },
          "handicap": {
            "type": "string",
            "nullable": true
          },
          "insuredsIdNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".IN2": {
        "type": "object",
        "additionalProperties": false
      },
      ".IN3": {
        "type": "object",
        "additionalProperties": false
      },
      ".IPaginatedList`1[[Nucleus.Domain.Features.Results.ResultKitStatusDto, Nucleus.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.ResultKitStatusDto"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      ".KeyValuePair`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".KitAttributeValueDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "alternateName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "attributeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isReadOnly": {
            "type": "boolean"
          },
          "allowsMultipleValues": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      ".KitDto": {
        "type": "object",
        "properties": {
          "kitNumber": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "currentStatuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.KitOrderLineStatusesDto"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.KitAttributeValueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".KitOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      ".KitOrderLineDto": {
        "type": "object",
        "properties": {
          "kitNumber": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "isInsurable": {
            "type": "boolean"
          },
          "isInsured": {
            "type": "boolean"
          },
          "currentStatus": {
            "type": "string",
            "nullable": true
          },
          "currentErrorMessage": {
            "type": "string",
            "nullable": true
          },
          "cancelCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cancelNote": {
            "type": "string",
            "nullable": true
          },
          "orderLineId": {
            "type": "string",
            "format": "uuid"
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.KitOrderLineDto"
            },
            "nullable": true
          },
          "kitAttributeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.NameValuePair`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
            },
            "nullable": true
          },
          "kitReceivedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "kitEffectiveDate": {
            "type": "string",
            "description": "Last Status Date",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".KitOrderLineResultDto": {
        "type": "object",
        "properties": {
          "resultPayload": {
            "type": "string",
            "nullable": true
          },
          "resultType": {
            "type": "string",
            "nullable": true
          },
          "resultDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderLineId": {
            "type": "string",
            "format": "uuid"
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "resultid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      ".KitOrderLineStatusDto": {
        "type": "object",
        "properties": {
          "statusName": {
            "type": "string",
            "nullable": true
          },
          "effectiveDate": {
            "type": "string",
            "format": "date-time"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".KitOrderLineStatusesDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "orderLineId": {
            "type": "string",
            "format": "uuid"
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "fulfillmentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "fulfillment": {
            "$ref": "#/components/schemas/.FulfillmentDto"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.ResultsStatusListDto"
            },
            "nullable": true
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.KitOrderLineStatusDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".KitResultsDto": {
        "type": "object",
        "properties": {
          "kitNumber": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "kitResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.KitOrderLineResultDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".KitSummaryDto": {
        "type": "object",
        "properties": {
          "kitNumber": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".KitsOrdersDto": {
        "type": "object",
        "properties": {
          "kitNumber": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.KitOrderDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".MSA": {
        "type": "object",
        "properties": {
          "acknowledgementCode": {
            "type": "string",
            "nullable": true
          },
          "messageControlId": {
            "type": "string",
            "nullable": true
          },
          "textMessage": {
            "type": "string",
            "nullable": true
          },
          "expectedSequenceNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "delayedAcknowledgementType": {
            "type": "string",
            "nullable": true
          },
          "errorCondition": {
            "$ref": "#/components/schemas/.CE"
          }
        },
        "additionalProperties": false
      },
      ".MSH": {
        "type": "object",
        "properties": {
          "fieldSeparator": {
            "type": "string",
            "nullable": true
          },
          "encodingCharacters": {
            "type": "string",
            "nullable": true
          },
          "sendingApplication": {
            "type": "string",
            "nullable": true
          },
          "sendingFacility": {
            "type": "string",
            "nullable": true
          },
          "receivingApplication": {
            "type": "string",
            "nullable": true
          },
          "receivingFacility": {
            "type": "string",
            "nullable": true
          },
          "dateTimeOfMessage": {
            "type": "string",
            "format": "date-time"
          },
          "security": {
            "type": "string",
            "nullable": true
          },
          "messageType": {
            "type": "string",
            "nullable": true
          },
          "messageControlId": {
            "type": "string",
            "nullable": true
          },
          "processingId": {
            "type": "string",
            "nullable": true
          },
          "versionId": {
            "type": "string",
            "nullable": true
          },
          "sequenceNumber": {
            "type": "string",
            "nullable": true
          },
          "continuationPointer": {
            "type": "string",
            "nullable": true
          },
          "acceptAcknowledgementType": {
            "type": "string",
            "nullable": true
          },
          "applicationAcknowledgementType": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "characterSet": {
            "type": "string",
            "nullable": true
          },
          "principalLanguageOfMessage": {
            "$ref": "#/components/schemas/.CE"
          }
        },
        "additionalProperties": false
      },
      ".NTE": {
        "type": "object",
        "properties": {
          "setId": {
            "type": "integer",
            "format": "int32"
          },
          "sourceOfComment": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".NameValuePair`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".NotificationSubscriptionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "endPoint": {
            "type": "string",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "nullable": true
          },
          "interval": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startTime": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean"
          },
          "filter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.Root"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      ".OBR": {
        "type": "object",
        "properties": {
          "setId": {
            "type": "integer",
            "format": "int32"
          },
          "placerOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "fillerOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "universalServiceIdentifier": {
            "$ref": "#/components/schemas/.CE"
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "requestedDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "observationDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "observationEndDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "collectionVolume": {
            "$ref": "#/components/schemas/.CQ"
          },
          "collectorIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XCN"
            },
            "nullable": true
          },
          "specimenActionCode": {
            "type": "string",
            "nullable": true
          },
          "dangerCode": {
            "$ref": "#/components/schemas/.CE"
          },
          "relevantClinicalInformation": {
            "type": "string",
            "nullable": true
          },
          "specimenReceivedDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "specimenSource": {
            "type": "string",
            "nullable": true
          },
          "orderingProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XCN"
            },
            "nullable": true
          },
          "orderCallbackPhoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XTN"
            },
            "nullable": true
          },
          "placerField1": {
            "type": "string",
            "nullable": true
          },
          "placerField2": {
            "type": "string",
            "nullable": true
          },
          "fillerField1": {
            "type": "string",
            "nullable": true
          },
          "fillerField2": {
            "type": "string",
            "nullable": true
          },
          "resultsRptStatusChngDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "chargeToPractice": {
            "type": "string",
            "nullable": true
          },
          "diagnosticServiceSectionID": {
            "type": "string",
            "nullable": true
          },
          "resultStatus": {
            "type": "string",
            "nullable": true
          },
          "parentResult": {
            "type": "string",
            "nullable": true
          },
          "quantityTimings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "resultCopiesTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XCN"
            },
            "nullable": true
          },
          "parentNumber": {
            "type": "string",
            "nullable": true
          },
          "transportationMode": {
            "type": "string",
            "nullable": true
          },
          "reasonsForStudy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.CE"
            },
            "nullable": true
          },
          "principalResultInterpreter": {
            "type": "string",
            "nullable": true
          },
          "assistantResultInterpreters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "technicians": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "transcriptionists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "scheduledDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "numberOfSampleContainers": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "transportLogisticsOfCollectedSample": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.CE"
            },
            "nullable": true
          },
          "collectorsComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.CE"
            },
            "nullable": true
          },
          "transportArrangementResponsibility": {
            "$ref": "#/components/schemas/.CE"
          },
          "transportArranged": {
            "type": "string",
            "nullable": true
          },
          "escortRequired": {
            "type": "string",
            "nullable": true
          },
          "plannedPatientTransportComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.CE"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".OBX": {
        "type": "object",
        "properties": {
          "setId": {
            "type": "integer",
            "format": "int32"
          },
          "valueType": {
            "type": "string",
            "nullable": true
          },
          "observationIdentifier": {
            "$ref": "#/components/schemas/.CE"
          },
          "observationSubId": {
            "type": "string",
            "nullable": true
          },
          "observationValues": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "units": {
            "$ref": "#/components/schemas/.CE"
          },
          "referencesRange": {
            "type": "string",
            "nullable": true
          },
          "abnormalFlags": {
            "type": "string",
            "nullable": true
          },
          "probability": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "natureOfAbnormalTests": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "observationResultStatus": {
            "type": "string",
            "nullable": true
          },
          "dateLastObsNormalValues": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userDefinedAccessChecks": {
            "type": "string",
            "nullable": true
          },
          "dateTimeOfObservation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "producersId": {
            "$ref": "#/components/schemas/.CE"
          },
          "responsibleObserver": {
            "$ref": "#/components/schemas/.XCN"
          },
          "observationMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.CE"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".ODS": {
        "type": "object",
        "additionalProperties": false
      },
      ".ODT": {
        "type": "object",
        "additionalProperties": false
      },
      ".ORC": {
        "type": "object",
        "properties": {
          "orderControl": {
            "type": "string",
            "nullable": true
          },
          "placerOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "fillerOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "placerGroupNumber": {
            "type": "string",
            "nullable": true
          },
          "orderStatus": {
            "type": "string",
            "nullable": true
          },
          "responseFlag": {
            "type": "string",
            "nullable": true
          },
          "quantityTiming": {
            "type": "string",
            "nullable": true
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "dateTimeOfTransaction": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "enteredBy": {
            "$ref": "#/components/schemas/.XCN"
          },
          "verifiedBy": {
            "$ref": "#/components/schemas/.XCN"
          },
          "orderingProvider": {
            "$ref": "#/components/schemas/.XCN"
          },
          "enterersLocation": {
            "type": "string",
            "nullable": true
          },
          "callBackPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "orderEffectiveDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderControlCodeReason": {
            "type": "string",
            "nullable": true
          },
          "enteringOrganization": {
            "$ref": "#/components/schemas/.CE"
          },
          "enteringDevice": {
            "$ref": "#/components/schemas/.CE"
          },
          "actionBy": {
            "$ref": "#/components/schemas/.XCN"
          }
        },
        "additionalProperties": false
      },
      ".ORM_O01_INSURANCE": {
        "type": "object",
        "properties": {
          "insurance": {
            "$ref": "#/components/schemas/.IN1"
          },
          "insuranceAdditionalInfo": {
            "$ref": "#/components/schemas/.IN2"
          },
          "insuranceAdditionalInfoCertification": {
            "$ref": "#/components/schemas/.IN3"
          }
        },
        "additionalProperties": false
      },
      ".ORM_O01_OBSERVATION": {
        "type": "object",
        "properties": {
          "observationSegment": {
            "$ref": "#/components/schemas/.OBX"
          },
          "notesAndComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.NTE"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".ORM_O01_ORDER": {
        "type": "object",
        "properties": {
          "commonOrderSegment": {
            "$ref": "#/components/schemas/.ORC"
          },
          "orderDetail": {
            "$ref": "#/components/schemas/.ORM_O01_ORDER_DETAIL"
          },
          "clinicalTrialIdentifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.CTI"
            },
            "nullable": true
          },
          "billing": {
            "$ref": "#/components/schemas/.BLG"
          }
        },
        "additionalProperties": false
      },
      ".ORM_O01_ORDER_DETAIL": {
        "type": "object",
        "properties": {
          "orderDetailSegment": {
            "$ref": "#/components/schemas/.ORM_O01_ORDER_DETAIL_SEGMENT"
          },
          "notesAndComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.NTE"
            },
            "nullable": true
          },
          "diagnoses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.DG1"
            },
            "nullable": true
          },
          "observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.ORM_O01_OBSERVATION"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".ORM_O01_ORDER_DETAIL_SEGMENT": {
        "type": "object",
        "properties": {
          "observationRequestSegment": {
            "$ref": "#/components/schemas/.OBR"
          },
          "requisitionDetail": {
            "$ref": "#/components/schemas/.RQD"
          },
          "requisitionDetail1Segment": {
            "$ref": "#/components/schemas/.RQ1"
          },
          "pharmacyPrescriptionOrderSegment": {
            "$ref": "#/components/schemas/.RXO"
          },
          "dietaryOrdersSupplementsAndPreferences": {
            "$ref": "#/components/schemas/.ODS"
          },
          "dietTrayInstructionsSegment": {
            "$ref": "#/components/schemas/.ODT"
          }
        },
        "additionalProperties": false
      },
      ".ORM_O01_PATIENT": {
        "type": "object",
        "properties": {
          "patientIdentification": {
            "$ref": "#/components/schemas/.PID"
          },
          "patientDemographic": {
            "$ref": "#/components/schemas/.PD1"
          },
          "notesAndComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.NTE"
            },
            "nullable": true
          },
          "patientVisit": {
            "$ref": "#/components/schemas/.ORM_O01_PATIENT_VISIT"
          },
          "insurances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.ORM_O01_INSURANCE"
            },
            "nullable": true
          },
          "guarantor": {
            "$ref": "#/components/schemas/.GT1"
          },
          "patientAllergyInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.AL1"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".ORM_O01_PATIENT_VISIT": {
        "type": "object",
        "properties": {
          "patientVisit": {
            "$ref": "#/components/schemas/.PV1"
          },
          "patientVisitAdditionalInformation": {
            "$ref": "#/components/schemas/.PV2"
          }
        },
        "additionalProperties": false
      },
      ".ORR_O02": {
        "type": "object",
        "properties": {
          "messageHeader": {
            "$ref": "#/components/schemas/.MSH"
          },
          "messageAcknowledgementSegment": {
            "$ref": "#/components/schemas/.MSA"
          },
          "errorSegment": {
            "$ref": "#/components/schemas/.ERR"
          },
          "notesAndComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.NTE"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".ORU_R01": {
        "type": "object",
        "properties": {
          "messageHeader": {
            "$ref": "#/components/schemas/.MSH"
          },
          "patientResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.ORU_R01_PATIENT_RESULT"
            },
            "nullable": true
          },
          "continuationPointerSegment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".ORU_R01_OBSERVATION": {
        "type": "object",
        "properties": {
          "observationSegment": {
            "$ref": "#/components/schemas/.OBX"
          },
          "notesAndComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.NTE"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".ORU_R01_ORDER_OBSERVATION": {
        "type": "object",
        "properties": {
          "commonOrderSegment": {
            "$ref": "#/components/schemas/.ORC"
          },
          "observationRequestSegment": {
            "$ref": "#/components/schemas/.OBR"
          },
          "notesAndComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.NTE"
            },
            "nullable": true
          },
          "observations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.ORU_R01_OBSERVATION"
            },
            "nullable": true
          },
          "clinicalTrialIdentification": {
            "$ref": "#/components/schemas/.CTI"
          }
        },
        "additionalProperties": false
      },
      ".ORU_R01_PATIENT": {
        "type": "object",
        "properties": {
          "patientIdentification": {
            "$ref": "#/components/schemas/.PID"
          },
          "patientDemographic": {
            "$ref": "#/components/schemas/.PD1"
          },
          "notesAndComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.NTE"
            },
            "nullable": true
          },
          "visit": {
            "$ref": "#/components/schemas/.ORU_R01_VISIT"
          }
        },
        "additionalProperties": false
      },
      ".ORU_R01_PATIENT_RESULT": {
        "type": "object",
        "properties": {
          "patient": {
            "$ref": "#/components/schemas/.ORU_R01_PATIENT"
          },
          "orderObservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.ORU_R01_ORDER_OBSERVATION"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".ORU_R01_VISIT": {
        "type": "object",
        "properties": {
          "patientVisit": {
            "$ref": "#/components/schemas/.PV1"
          },
          "patientVisitAdditionalInformation": {
            "$ref": "#/components/schemas/.PV2"
          }
        },
        "additionalProperties": false
      },
      ".OrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.OrderLineDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".OrderLineDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "bundleProductId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "bundleProductName": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "currentStatus": {
            "type": "string",
            "nullable": true
          },
          "fulfillments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.FulfillmentDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".PD1": {
        "type": "object",
        "properties": {
          "livingDependencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "livingArrangement": {
            "type": "string",
            "nullable": true
          },
          "patientPrimaryFacilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XON"
            },
            "nullable": true
          },
          "patientPrimaryCareProviderNamesAndIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XCN"
            },
            "nullable": true
          },
          "studentIndicator": {
            "type": "string",
            "nullable": true
          },
          "handicap": {
            "type": "string",
            "nullable": true
          },
          "livingWill": {
            "type": "string",
            "nullable": true
          },
          "organDonor": {
            "type": "string",
            "nullable": true
          },
          "separateBill": {
            "type": "string",
            "nullable": true
          },
          "duplicatePatient": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "publicityIndicator": {
            "$ref": "#/components/schemas/.CE"
          },
          "protectionIndicator": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".PID": {
        "type": "object",
        "properties": {
          "setId": {
            "type": "integer",
            "format": "int32"
          },
          "externalPatientId": {
            "$ref": "#/components/schemas/.CX"
          },
          "internalPatientIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.CX"
            },
            "nullable": true
          },
          "alternatePatientId": {
            "type": "string",
            "nullable": true
          },
          "patientNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XPN"
            },
            "nullable": true
          },
          "mothersMaidenName": {
            "$ref": "#/components/schemas/.XPN"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sex": {
            "type": "string",
            "nullable": true
          },
          "patientAlias": {
            "$ref": "#/components/schemas/.XPN"
          },
          "race": {
            "type": "string",
            "nullable": true
          },
          "patientAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XAD"
            },
            "nullable": true
          },
          "countyCode": {
            "type": "string",
            "nullable": true
          },
          "homePhoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XTN"
            },
            "nullable": true
          },
          "businessPhoneNumbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XTN"
            },
            "nullable": true
          },
          "primaryLanguage": {
            "$ref": "#/components/schemas/.CE"
          },
          "maritalStatus": {
            "type": "string",
            "nullable": true
          },
          "religion": {
            "type": "string",
            "nullable": true
          },
          "patientAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "ssnNumber": {
            "type": "string",
            "nullable": true
          },
          "driversLicenseNumber": {
            "type": "string",
            "nullable": true
          },
          "mothersIdentifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ethnicGroup": {
            "type": "string",
            "nullable": true
          },
          "birthPlace": {
            "type": "string",
            "nullable": true
          },
          "multipleBirthIndicator": {
            "type": "string",
            "nullable": true
          },
          "birthOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "citizenships": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "veteransMilitaryStatus": {
            "type": "string",
            "nullable": true
          },
          "nationalityCode": {
            "$ref": "#/components/schemas/.CE"
          },
          "patientDeathDateAndTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "patientDeathIndicator": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".PV1": {
        "type": "object",
        "properties": {
          "setId": {
            "type": "integer",
            "format": "int32"
          },
          "patientClass": {
            "type": "string",
            "nullable": true
          },
          "assignedPatientLocation": {
            "type": "string",
            "nullable": true
          },
          "admissionType": {
            "type": "string",
            "nullable": true
          },
          "preadmitNumber": {
            "type": "string",
            "nullable": true
          },
          "priorPatientLocation": {
            "type": "string",
            "nullable": true
          },
          "attendingDoctors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XCN"
            },
            "nullable": true
          },
          "referringDoctors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XCN"
            },
            "nullable": true
          },
          "consultingDoctors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XCN"
            },
            "nullable": true
          },
          "hospitalService": {
            "type": "string",
            "nullable": true
          },
          "temporaryLocation": {
            "type": "string",
            "nullable": true
          },
          "preadmitTestIndicator": {
            "type": "string",
            "nullable": true
          },
          "readmissionIndicator": {
            "type": "string",
            "nullable": true
          },
          "admitSource": {
            "type": "string",
            "nullable": true
          },
          "ambulatoryStatuses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "vipIndicator": {
            "type": "string",
            "nullable": true
          },
          "admittingDoctors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XCN"
            },
            "nullable": true
          },
          "patientType": {
            "type": "string",
            "nullable": true
          },
          "visitNumber": {
            "type": "string",
            "nullable": true
          },
          "financialClasses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "chargePriceIndicator": {
            "type": "string",
            "nullable": true
          },
          "courtesyCode": {
            "type": "string",
            "nullable": true
          },
          "creditRating": {
            "type": "string",
            "nullable": true
          },
          "contractCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "contractEffectiveDates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "nullable": true
          },
          "contractAmounts": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "contractPeriods": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "interestCode": {
            "type": "string",
            "nullable": true
          },
          "transferToBadDebtCode": {
            "type": "string",
            "nullable": true
          },
          "transferToBadDebtDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "badDebtAgencyCode": {
            "type": "string",
            "nullable": true
          },
          "badDebtTransferAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "badDebtRecoveryAmount": {
            "type": "string",
            "nullable": true
          },
          "deleteAccountIndicator": {
            "type": "string",
            "nullable": true
          },
          "deleteAccountDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dischargeDisposition": {
            "type": "string",
            "nullable": true
          },
          "dischargedToLocation": {
            "type": "string",
            "nullable": true
          },
          "dietType": {
            "type": "string",
            "nullable": true
          },
          "servicingFacility": {
            "type": "string",
            "nullable": true
          },
          "bedStatus": {
            "type": "string",
            "nullable": true
          },
          "accountStatus": {
            "type": "string",
            "nullable": true
          },
          "pendingLocation": {
            "type": "string",
            "nullable": true
          },
          "priorTemporaryLocation": {
            "type": "string",
            "nullable": true
          },
          "admitDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dischargeDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currentPatientBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalCharges": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalAdjustments": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalPayments": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "alternateVisitId": {
            "type": "string",
            "nullable": true
          },
          "visitIndicator": {
            "type": "string",
            "nullable": true
          },
          "otherHealthcareProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.XCN"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".PV2": {
        "type": "object",
        "additionalProperties": false
      },
      ".ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      ".ProductDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "isInsurable": {
            "type": "boolean"
          },
          "shippingQualified": {
            "type": "boolean",
            "nullable": true
          },
          "maxOrderingQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.ProductDto.Component"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".ProductDto.Component": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "product": {
            "$ref": "#/components/schemas/.ProductDto"
          }
        },
        "additionalProperties": false
      },
      ".RQ1": {
        "type": "object",
        "additionalProperties": false
      },
      ".RQD": {
        "type": "object",
        "additionalProperties": false
      },
      ".RXO": {
        "type": "object",
        "additionalProperties": false
      },
      ".ResultKitStatusDto": {
        "type": "object",
        "properties": {
          "resultPayload": {
            "type": "string",
            "nullable": true
          },
          "resultType": {
            "type": "string",
            "nullable": true
          },
          "resultDisplayName": {
            "type": "string",
            "nullable": true
          },
          "resultDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderLineId": {
            "type": "string",
            "format": "uuid"
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "kitNumber": {
            "type": "string",
            "nullable": true
          },
          "resultId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      ".ResultsStatusListDto": {
        "type": "object",
        "properties": {
          "resultType": {
            "type": "string",
            "nullable": true
          },
          "resultTypeDisplayName": {
            "type": "string",
            "nullable": true
          },
          "resultPayload": {
            "type": "string",
            "nullable": true
          },
          "resultDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      ".Root": {
        "type": "object",
        "properties": {
          "eventType": {
            "type": "string",
            "nullable": true
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.KeyValuePair`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".ShipmentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isReturnShipment": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/.AddressDto"
          },
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "shippingInstruction": {
            "type": "string",
            "nullable": true
          },
          "reference1": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "courier": {
            "$ref": "#/components/schemas/.CourierDto"
          },
          "courierService": {
            "$ref": "#/components/schemas/.CourierServiceDto"
          }
        },
        "additionalProperties": false
      },
      ".UpdateNotificationSubscription.Command": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Subscription type: webhook or email",
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of subscribed events",
            "nullable": true
          },
          "endPoint": {
            "type": "string",
            "description": "For webhook, the endpoint is a REST API endpoint. For email, it is an email address.",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "description": "For webhook, the secret is used as the key to generate the GxG-Signature header value",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "shouldClearPayloadFilter": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      ".XAD": {
        "type": "object",
        "properties": {
          "streetAddress": {
            "type": "string",
            "nullable": true
          },
          "otherDesignation": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "stateOrProvince": {
            "type": "string",
            "nullable": true
          },
          "zipOrPostalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "type": "string",
            "nullable": true
          },
          "otherGeographicDesignation": {
            "type": "string",
            "nullable": true
          },
          "countyParishCode": {
            "type": "string",
            "nullable": true
          },
          "censusTract": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".XCN": {
        "type": "object",
        "properties": {
          "idNumber": {
            "type": "string",
            "nullable": true
          },
          "familyName": {
            "type": "string",
            "nullable": true
          },
          "givenName": {
            "type": "string",
            "nullable": true
          },
          "middleInitialOrName": {
            "type": "string",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "degree": {
            "type": "string",
            "nullable": true
          },
          "sourceTable": {
            "type": "string",
            "nullable": true
          },
          "assigningAuthority": {
            "type": "string",
            "nullable": true
          },
          "nameType": {
            "type": "string",
            "nullable": true
          },
          "identifierCheckDigit": {
            "type": "string",
            "nullable": true
          },
          "codeIdentifyingTheCheckDigitSchemeEmployed": {
            "type": "string",
            "nullable": true
          },
          "identifierTypeCode": {
            "type": "string",
            "nullable": true
          },
          "assigningFacilityId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".XON": {
        "type": "object",
        "properties": {
          "organizationName": {
            "type": "string",
            "nullable": true
          },
          "organizationNameTypeCode": {
            "type": "string",
            "nullable": true
          },
          "idNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "checkDigit": {
            "type": "string",
            "nullable": true
          },
          "codeIdentifyingTheCheckDigitSchemeEmployed": {
            "type": "string",
            "nullable": true
          },
          "assigningAuthority": {
            "type": "string",
            "nullable": true
          },
          "identifierTypeCode": {
            "type": "string",
            "nullable": true
          },
          "assigningFacilityId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".XPN": {
        "type": "object",
        "properties": {
          "familyName": {
            "type": "string",
            "nullable": true
          },
          "givenName": {
            "type": "string",
            "nullable": true
          },
          "middleInitialOrName": {
            "type": "string",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "degree": {
            "type": "string",
            "nullable": true
          },
          "nameTypeCode": {
            "type": "string",
            "nullable": true
          },
          "nameRepresentationCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      ".XTN": {
        "type": "object",
        "properties": {
          "telephoneNumber": {
            "type": "string",
            "nullable": true
          },
          "telecommunicationUseCode": {
            "type": "string",
            "nullable": true
          },
          "telecommunicationEquipmentType": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "areaCityCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "phoneNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extension": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "anyText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeGroupDefinitionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.AttributeGroupDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelKitOrderLine": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CancelKitOrderLineItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelKitOrderLineItem": {
        "type": "object",
        "properties": {
          "orderLineGuid": {
            "type": "string",
            "format": "uuid"
          },
          "kitNumber": {
            "type": "string",
            "nullable": true
          },
          "cancelNote": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateNotificationSubscriptionCommand": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Subscription type: webhook or email",
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of subscribed events",
            "nullable": true
          },
          "endPoint": {
            "type": "string",
            "description": "For webhook, the endpoint is a REST API endpoint. For email, it is an email address.",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "description": "For webhook, the secret is used as the key to generate the GxG-Signature header value",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrder": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrder_Item"
            },
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrderForExistingKits": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrderForExistingKits_Item"
            },
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrderForExistingKits_Item": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "kitNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrder_Item": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Unique identification of the product to be ordered",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the product to be ordered. \r\nOmit this property if a list of shipments is provided (as in the case of third-party logistic order).",
            "format": "int32",
            "nullable": true
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrder_Shipment"
            },
            "description": "A list of shipments\r\nOmit this property if this is not a third-party logistic order.",
            "nullable": true
          },
          "samples": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrder_Sample"
            },
            "description": "Optionally list the samples and their attributes",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Comment about this item.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrder_Sample": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.NameValuePair`2[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrder_Shipment": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/.AddressDto"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity in this shipment",
            "format": "int32"
          },
          "shippingInstruction": {
            "type": "string",
            "description": "Shipping instruction",
            "nullable": true
          },
          "referenceId": {
            "type": "string",
            "description": "An optional ID defined by the client",
            "nullable": true
          },
          "courierServiceCode": {
            "type": "string",
            "description": "A code that defines the shipping method by selected courier",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Attributes of the shipment, such as Saturday delivery, is One Rate, etc.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditAddressCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "isReturnShipment": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/.AddressDto"
          },
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "shippingInstruction": {
            "type": "string",
            "nullable": true
          },
          "reference1": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "courier": {
            "$ref": "#/components/schemas/.CourierDto"
          },
          "courierService": {
            "$ref": "#/components/schemas/.CourierServiceDto"
          }
        },
        "additionalProperties": false
      },
      "GetAttributeGroupDefinitions": {
        "type": "object",
        "additionalProperties": false
      },
      "GetOrderLineItemByGuidKitStatusSummary": {
        "type": "object",
        "properties": {
          "totalReceivedKits": {
            "type": "integer",
            "format": "int32"
          },
          "unpaidKits": {
            "type": "integer",
            "format": "int32"
          },
          "paidKits": {
            "type": "integer",
            "format": "int32"
          },
          "canceledKits": {
            "type": "integer",
            "format": "int32"
          },
          "canceledProducts": {
            "type": "integer",
            "format": "int32"
          },
          "errorKits": {
            "type": "integer",
            "format": "int32"
          },
          "resultCompleteKits": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetOrderLineItemByGuidResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "orderBy": {
            "type": "string",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "orderLineNote": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "kitStatusSummary": {
            "$ref": "#/components/schemas/GetOrderLineItemByGuidKitStatusSummary"
          },
          "shippingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "currentStatus": {
            "type": "string",
            "nullable": true
          },
          "cancelCodeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cancelNote": {
            "type": "string",
            "nullable": true
          },
          "siblingOrderLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.GetOrderLineItemByGuid.SiblingOrderLine"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetKitAttributeValues": {
        "type": "object",
        "properties": {
          "kitNumber": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/.KitAttributeValueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://demo-auth.genebygene.com/connect/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": [ ]
    }
  ]
}